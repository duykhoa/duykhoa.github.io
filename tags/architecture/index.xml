<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Kevin's Blog</title><link>https://duykhoa.github.io/tags/architecture/</link><description>Recent content in Architecture on Kevin's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 16 Aug 2024 18:13:56 -0400</lastBuildDate><atom:link href="https://duykhoa.github.io/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a project layout in Golang</title><link>https://duykhoa.github.io/posts/golang-ddd-project/</link><pubDate>Fri, 16 Aug 2024 18:13:56 -0400</pubDate><guid>https://duykhoa.github.io/posts/golang-ddd-project/</guid><description>&lt;p>My experience when setting up a new Golang project&lt;/p>
&lt;p>In a recent project, I am asked to create a new boilerplate project in Golang follows Domain Driven Development architecture.
The project becomes a standard project for all new services. It is a great opportunity for me to deep dive into the Golang ecosystem and DDD concepts.
I have learnt many things when working on this project and I will share them with you in a series of Golang blog post.&lt;/p></description></item></channel></rss>